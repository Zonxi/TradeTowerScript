getgenv().autoClick = true;
getgenv().autoCase = true;
getgenv().autoUpgrade = true;
getgenv().autoSell = true;

function doClick()
    spawn(function()
        while getgenv().autoClick ==  true do
            local Event = game:GetService("ReplicatedStorage").Events.ClientClick
            Event:FireServer()
            wait()
        end
    end)
end 
    
function autoCase()    
    spawn(function()
        while getgenv().autoCase == true do
            local A_1 = "Noobie"
            local Event = game:GetService("ReplicatedStorage").Events.OpenCase
            Event:InvokeServer(A_1)
            wait()
        end
    end)
end

function autoUpgrade()
    spawn(function()
        while getgenv().autoUpgrade == true do
            local A_1 = "Upgrade"
            local Event = game:GetService("ReplicatedStorage").Events.StoreActions
            Event:InvokeServer(A_1)
            wait()
        end
    end)
end



local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow("Trade Tower Script") -- Creates the window

local b = w:CreateFolder("AutoFarm") -- Creates the folder(U will put here your buttons,etc)

b:Label("Made by Zonxi",{
    TextSize = 25; -- Self Explaining
    TextColor = Color3.fromRGB(255,255,255); -- Self Explaining
    BgColor = Color3.fromRGB(69,69,69); -- Self Explaining
    
}) 



b:Toggle("Auto Click",function(bool)
    getgenv().autoClick = bool
    print("Auto Click is:on ', ")
    if bool then
        doClick();
    end
end)       
    

b:Toggle("Auto Upgrade",function(bool)
    getgenv().autoUpgrade = bool
    print("auto Upgrade is:on ', ") 
    if bool then
        autoUpgrade();
    end
end)  


b:Toggle("Auto Case",function(bool)
    getgenv().autoCase = bool
    print("auto Case is:on ', ") 
    if bool then
        autoCase();
    end
end)  




b:Slider("Slider",{
    min = 10; -- min value of the slider
    max = 50; -- max value of the slider
    precise = true; -- max 2 decimals
},function(value)
    print(value)
end)

b:Dropdown("Dropdown",{"A","B","C"},true,function(mob) --true/false, replaces the current title "Dropdown" with the option that t
    print(mob)
end)

b:Bind("Bind",Enum.KeyCode.C,function() --Default bind
    print("Yes")
end)

b:ColorPicker("ColorPicker",Color3.fromRGB(255,0,0),function(color) --Default color
    print(color)
end)

b:Box("Box","number",function(value) -- "number" or "string"
    print(value)
end)

b:DestroyGui()






local A_1 = "QuickSell"
local A_2 = "Cobolt Lightning Pauldrons"
local A_3 = 1
local Event = game:GetService("ReplicatedStorage").Events.InventoryActions
Event:InvokeServer(A_1, A_2, A_3)

